#!/bin/bash

#####
#       PARSE COMMAND LINE
#####
function usage () {
    echo "Usage: $0 TEMP_FILE [-timing ACTION_TIME_FILE] [-o BASENAME]" 1>&2
    echo "" 1>&2
    echo "TEMP_FILE                   Temperature versus time file generated by readtqtec" 1>&2
    echo "-closure CLOSURE_FILE       Closure temperature file generated by readtqtec -closure" 1>&2
    echo "-timing ACTION_TIME_FILE    Timing of tectonic actions generated by tqtec -timing" 1>&2
    echo "-o BASENAME                 Basename for output file (default: temp_vs_time)" 1>&2
    exit 1
}

# Required temperature vs. time file
TEMPFILE="$1"
if [ ! -f $TEMPFILE ]
then
    echo "$0: could not find temperature file \"$TEMPFILE\"" 1>&2
    exit 1
fi
shift

# Optional files
CLOSURE_FILE=
TIMING_FILE=
BASENAME=temp_vs_time
while [ "$1" != "" ]
do
    case $1 in
        -closure) shift; CLOSURE_FILE=$1;;
        -timing) shift; TIMING_FILE=$1;;
        -o) shift; BASENAME=$1;;
    esac
    shift
done


#####
#	SET BOUNDS
#####
# Temperature
TMIN="0"
TMAX=`awk '{if (NR>1) print $0}' $TEMPFILE | gmt gmtinfo -C |\
        awk '{for(i=1;i<=NF;i++){printf("%f\n"),$i}}' | gmt gmtinfo -C |\
        awk '{print $2-$2%20+20}'`

# Time
tMIN=`head -1 $TEMPFILE | awk '{print $1}'`
tMAX="0"
dt=`head -1 $TEMPFILE | awk '{print $2}'`

# Tectonic action timing
function plot_tectonic_timing () {
    YMIN=$(echo $LIMS | sed -e "s/-R//" | awk -F/ '{print $3}')
    YMAX=$(echo $LIMS | sed -e "s/-R//" | awk -F/ '{print $4}')
    awk 'BEGIN{print ">"}{
        if ($1=="burial" || $1=="uplift" || $1=="thicken") {
            print ">"
            print '$tMIN'+$3,'$YMIN'
            print '$tMIN'+$4,'$YMIN'
            print '$tMIN'+$4,'$YMAX'
            print '$tMIN'+$3,'$YMAX'
            print '$tMIN'+$3,'$YMIN'
        }
    }' $TIMING_FILE |\
        gmt psxy $PROJ $LIMS -G245 -K -O >> $PSFILE
    awk 'BEGIN{print ">"}{
        if ($1=="thrust") {
            print ">"
            print '$tMIN'+$3,'$YMIN'
            print '$tMIN'+$3,'$YMAX'
        }
    }' $TIMING_FILE |\
        gmt psxy $PROJ $LIMS -W3p,225 -K -O >> $PSFILE
}


#####
#	PLOT TEMPERATURE VS TIME
#####

# GMT variables
gmt set PS_MEDIA 17ix17i
gmt set MAP_GRID_PEN 0.5p,225,4_4:0

LIMS="-R$tMIN/$tMAX/$TMIN/$TMAX"
tMIN_MODEL=`echo $tMIN | awk '{print -$1}'`
tMAX_MODEL=`echo $tMAX | awk '{print -$1}'`
LIMS_MODEL="-R$tMAX_MODEL/$tMIN_MODEL/$TMIN/$TMAX"

AGE_TIKS=`echo $LIMS | sed -e "s/-R//" | awk -F"/" '{print $1,$2}' |\
          awk '{
              time = $2-$1
              if (time>=50) {dt=10}
              else if (time>=20) {dt=5}
              else if (time>=10) {dt=2}
              else {dt=1}
              print dt
          }'`
TEMP_TIKS=`echo $LIMS | sed -e "s/-R//" | awk -F"/" '{print $3,$4}' |\
          awk '{
              temp = $2-$1
              if (temp>=200) {dT=50}
              else if (temp>=100) {dT=20}
              else if (temp>=50) {dT=10}
              else if (temp>=20) {dT=5}
              else if (temp>=10) {dT=2}
              else if (temp>=5) {dT=1}
              else {dT=0.5}
              print dT
          }'`

PROJ="-JX8i/6i"

PSFILE="${BASENAME}.ps"


# Colors for each horizon
NCOL=$(sed -ne "2p" $TEMPFILE | awk '{print NF}')
NCOL2=$(echo $NCOL 1.1 | awk '{print $1*$2}')
gmt makecpt -Cmagma -T0/$NCOL2/1 > color_list.cpt
awk '{if(NF==5){print $2}}' color_list.cpt > color_list.tmp


# Initialize plot
gmt psxy -T -K > $PSFILE

# Tectonic timing
if [ "$TIMING_FILE" != "" ]; then plot_tectonic_timing; fi

# Basemap
gmt psbasemap $PROJ $LIMS -Bxa${AGE_TIKS}g${AGE_TIKS}+l"Time Before Present (Ma)" -Bya${TEMP_TIKS}g${TEMP_TIKS}+l"Temperature (\260C)" -BWeS -K -O >> $PSFILE
gmt psbasemap $PROJ $LIMS_MODEL -Bxa${AGE_TIKS}+l"Model Time (Ma)" -BN -K -O >> $PSFILE

# Temperature versus time
for COL in $(seq 1 $NCOL)
do
    COLOR=$(sed -ne "${COL}p" color_list.tmp)
    if [ $COL -eq 1 ]
    then
        awk '{if (NR > 1) print '$tMIN'+(NR-1)*'$dt',$'$COL'}' $TEMPFILE |\
          gmt psxy $PROJ $LIMS -W3p,$COLOR -K -O >> $PSFILE
    else
        awk '{if (NR > 1) print '$tMIN'+(NR-1)*'$dt',$'$COL'}' $TEMPFILE |\
          gmt psxy $PROJ $LIMS -W1p,$COLOR -K -O >> $PSFILE
    fi
done

# Closure times
if [ "$CLOSURE_FILE" != "" ]
then
    awk '{
        if (/>/) {
            i = 0
            temp = $2
        } else {
            i++
            if (!/previous/ && $1!="#") {
                print '$tMIN'+$1,temp,i-1
            }
        }
    }' $CLOSURE_FILE |\
        gmt psxy $PROJ $LIMS -Sc0.05i -W1p+cl -Ccolor_list.cpt -K -O >> $PSFILE
fi

# Date and time
echo 12,2 LB $(date) | gmt pstext $PROJ $LIMS -F+f+j+cBL -D0.05i -K -O >> $PSFILE

# Finalize
gmt psxy -T -O >> $PSFILE

gmt psconvert $PSFILE -Tf -A
echo "Created file $(basename $PSFILE .ps).pdf"

rm $PSFILE
rm gmt.*
rm color_list.tmp
rm color_list.cpt
