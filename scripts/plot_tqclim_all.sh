#!/bin/bash


EPOCHTIME=`date +%s`


#####
#	PARSE COMMAND LINE ARGUMENTS
#####
function usage () {
    echo "Usage: $0 TEMP_FILE  DEP_FILE  HF_FILE  [-geotherm GEOTHERM_FILE [-geotherm:time TIME]] [-timing ACTION_TIME_FILE] [-closure CLOSURE_FILE]" 1>&2
    echo "" 1>&2
    echo "TEMP_FILE                   Temperature versus time file generated by readtqtec" 1>&2
    echo "DEP_FILE                    Depth versus time file generated by readtqtec" 1>&2
    echo "HF_FILE                     Surface heat flow versus time file generated by readtqtec" 1>&2
    echo "-horizon:time TIME          Plot horizon temp/dep every TIME yr (default: 10 points)" 1>&2
    echo "-geotherm GEOTHERM_FILE     Geotherm generated by tqtec -geotherm (default: plot geotherm at start of model)" 1>&2
    echo "-geotherm:time TIME         Time to plot geotherm in yr since start of model (option can be repeated)" 1>&2
    echo "-timing ACTION_TIME_FILE    Timing of tectonic actions generated by tqtec -timing" 1>&2
    echo "-closure CLOSURE_FILE       Plot closure on temp-time plot from readtqtec -closure" 1>&2
    echo "-closure:LIMS -RX1/X2/Y1/Y2 Set closure temperature limits" 1>&2
    exit 1
}

if [ $# -lt 3 ]
then
    echo "$0: three input files must be defined" 1>&2
    usage
fi

TEMPFILE="$1"
DEPFILE="$2"
HFFILE="$3"
if [ ! -f $TEMPFILE ]
then
    echo "$0: could not find temperature file \"$TEMPFILE\"" 1>&2
    exit 1
fi
if [ ! -f $DEPFILE ]
then
    echo "$0: could not find depth file \"$DEPFILE\"" 1>&2
    exit 1
fi
if [ ! -f $HFFILE ]
then
    echo "$0: could not find heat flow file \"$HFFILE\"" 1>&2
    exit 1
fi

HORIZON_TIME=
GEOTHERM_FILE=
GEOTHERM_PLOT_TIME=0
TIMING_FILE=
CLOSURE_FILE=
CLOSURE_LIMS=
shift
shift
while [ "$1" != "" ]
do
    case $1 in
        -horizon:time) shift; HORIZON_TIME=$1;;
        -geotherm) shift; GEOTHERM_FILE=$1;;
        -geotherm:time) shift; GEOTHERM_PLOT_TIME="$GEOTHERM_PLOT_TIME $1";;
        -timing) shift; TIMING_FILE=$1;;
        -closure) shift; CLOSURE_FILE=$1;;
        -closure:LIMS) shift; CLOSURE_LIMS=$1;;
    esac
    shift
done
if [ "$GEOTHERM_FILE" != "" ]
then
    if [ ! -f $GEOTHERM_FILE ]
    then
        echo "$0: could not find geotherm file \"$GEOTHERM_FILE\"...not plotting" 1>&2
        GEOTHERM_FILE=
    fi
fi
if [ "$TIMING_FILE" != "" ]
then
    if [ ! -f $TIMING_FILE ]
    then
        echo "$0: could not find tectonic action timing file \"$TIMING_FILE\"...not plotting" 1>&2
        TIMING_FILE=
    fi
fi
if [ "$CLOSURE_FILE" != "" ]
then
    if [ ! -f $CLOSURE_FILE ]
    then
        echo "$0: could not find closure temperature file \"$CLOSURE_FILE\"...not plotting" 1>&2
        CLOSURE_FILE=
    fi
fi


#####
#	SET BOUNDS
#####
# Temperature
TMIN=`awk '{if (NR>1) print $0}' $TEMPFILE | gmt gmtinfo -C |\
        awk '{for(i=1;i<=NF;i++){printf("%f\n"),$i}}' | gmt gmtinfo -C |\
        awk '{if($1<0){print $1*1.1}else{print $1*0.9}}'`
TMAX=`awk '{if (NR>1) print $0}' $TEMPFILE | gmt gmtinfo -C |\
        awk '{for(i=1;i<=NF;i++){printf("%f\n"),$i}}' | gmt gmtinfo -C |\
        awk '{if($2<0){print $2*0.9}else{print $2*1.1}}'`

# Depth
ZMIN=`awk '{if (NR>1) print $0}' $DEPFILE | gmt gmtinfo -C |\
      awk '{for(i=1;i<=NF;i++){printf("%f\n"),$i}}' | gmt gmtinfo -C |\
      awk '{print $1-$1%10-10}'`
ZMAX=`awk '{if (NR>1) print $0}' $DEPFILE | gmt gmtinfo -C |\
      awk '{for(i=1;i<=NF;i++){printf("%f\n"),$i}}' | gmt gmtinfo -C |\
      awk '{print $2-$2%10+10}'`
ZMAX0="0"

# Time
tMIN=`head -1 $DEPFILE | awk '{print $1}'`
tMAX="0"
dt=`head -1 $DEPFILE | awk '{print $2}'`

# Heat flow
HFMIN=`awk '{if (NR>1) print $0}' $HFFILE | gmt gmtinfo -C |\
      awk '{for (i=1;i<=NF;i++) {printf("%f\n"),$i}}' | gmt gmtinfo -C |\
      awk '{print $1-$1%5-5}'`
HFMAX=`awk '{if (NR>1) print $0}' $HFFILE | gmt gmtinfo -C |\
      awk '{for (i=1;i<=NF;i++) {printf("%f\n"),$i}}' | gmt gmtinfo -C |\
      awk '{print $2-$2%5+5}'`

# Tectonic action function
function plot_tectonic_timing () {
    YMIN=$(echo $LIMS | sed -e "s/-R//" | awk -F/ '{print $3}')
    YMAX=$(echo $LIMS | sed -e "s/-R//" | awk -F/ '{print $4}')
    awk 'BEGIN{print ">"}{
        if ($1=="burial" || $1=="uplift" || $1=="thicken") {
            print ">"
            print '$tMIN'+$3,'$YMIN'
            print '$tMIN'+$4,'$YMIN'
            print '$tMIN'+$4,'$YMAX'
            print '$tMIN'+$3,'$YMAX'
            print '$tMIN'+$3,'$YMIN'
        }
    }' $TIMING_FILE |\
        gmt psxy $PROJ $LIMS -G245 -K -O >> $PSFILE
    awk 'BEGIN{print ">"}{
        if ($1=="thrust") {
            print ">"
            print '$tMIN'+$3,'$YMIN'
            print '$tMIN'+$3,'$YMAX'
        }
    }' $TIMING_FILE |\
        gmt psxy $PROJ $LIMS -W3p,225 -K -O >> $PSFILE
}


#####
#	PLOT RESULTS
#####
PSFILE="tqclim_results.ps"

gmt set PS_MEDIA 17ix17i
gmt set MAP_GRID_PEN 0.5p,225,4_4:0

# Colors for horizons
NCOL=$(sed -ne "2p" $DEPFILE | awk '{print NF}')
NCOL2=$(echo $NCOL 1.1 | awk '{print $1*$2}')
gmt makecpt -Cmagma -T0/$NCOL2/1 | awk '{if(NF==5){print $2}}' > color_list_${EPOCHTIME}.tmp




# Depth vs. time
echo "$0: plotting depth vs. time"

LIMS="-R$tMIN/$tMAX/$ZMIN/$ZMAX"
tMIN_MODEL=`echo $tMIN | awk '{print -$1}'`
tMAX_MODEL=`echo $tMAX | awk '{print -$1}'`
LIMS_MODEL="-R$tMAX_MODEL/$tMIN_MODEL/$ZMIN/$ZMAX"
PROJ="-JX4i/3i -P"

echo 0 0 | gmt psxy $PROJ $LIMS -K -X1.5i -Y1.5i > $PSFILE

if [ "$TIMING_FILE" != "" ]; then plot_tectonic_timing; fi

    DEP_TIKS=`echo $LIMS | sed -e "s/-R//" | awk -F"/" '{print $3,$4}' |\
            awk '{
                relief = $2-$1
                if (relief>=5000) {dz=1000}
                else if (relief>=2000) {dz=500}
                else if (relief>=1000) {dz=200}
                else if (relief>=500) {dz=100}
                else if (relief>=200) {dz=50}
                else if (relief>=100) {dz=20}
                else if (relief>=50) {dz=10}
                else if (relief>=20) {dz=5}
                else if (relief>=10) {dz=2}
                else if (relief>=5) {dz=1}
                else {dz=0.5}
                print dz
            }'`
    AGE_TIKS=`echo $LIMS | sed -e "s/-R//" | awk -F"/" '{print $1,$2}' |\
            awk '{
                time = $2-$1
                if (time>=100000) {dt=20000}
                else if (time>=50000) {dt=10000}
                else if (time>=20000) {dt=5000}
                else if (time>=10000) {dt=2000}
                else if (time>=5000) {dt=1000}
                else if (time>=2000) {dt=500}
                else if (time>=1000) {dt=200}
                else if (time>=500) {dt=100}
                else if (time>=200) {dt=50}
                else if (time>=100) {dt=20}
                else if (time>=50) {dt=10}
                else if (time>=20) {dt=5}
                else if (time>=10) {dt=2}
                else {dt=1}
                print dt
            }'`

gmt psbasemap $PROJ $LIMS -Bxa${AGE_TIKS}g${AGE_TIKS}+l"Time Before Present (yr)" -Bya${DEP_TIKS}g${DEP_TIKS}+l"Depth (m)" -BWeS -K -O >> $PSFILE
gmt psbasemap $PROJ $LIMS_MODEL -Bxa${AGE_TIKS}+l"Model Time (m)" -BN -K -O >> $PSFILE

for COL in $(seq 1 $NCOL)
do
    COLOR=$(sed -ne "${COL}p" color_list_${EPOCHTIME}.tmp)
    if [ $COL -eq 1 ]
    then
        awk 'BEGIN{g=1}{
            if (NR == 1) {print "> -W3p,'$COLOR'"}
            if (NR > 1) {
                if (g==1 && $'$COL'>0) {
                    g = 0
                    print "> -W3p,'$COLOR'@80"
                }
                if (g==0 && $'$COL'<=0) {
                    g = 1
                    print "> -W3p,'$COLOR'"
                }
                print '$tMIN'+(NR-1)*'$dt',$'$COL'
            }
        }' $DEPFILE |\
            gmt psxy $PROJ $LIMS -K -O >> $PSFILE
    else
        awk 'BEGIN{g=1}{
            if (NR == 1) {print "> -W1p,'$COLOR'"}
            if (NR > 1) {
                if (g==1 && $'$COL'>0) {
                    g = 0
                    print "> -W1p,'$COLOR'@80"
                }
                if (g==0 && $'$COL'<=0) {
                    g = 1
                    print "> -W1p,'$COLOR'"
                }
                print '$tMIN'+(NR-1)*'$dt',$'$COL'
            }
        }' $DEPFILE |\
            gmt psxy $PROJ $LIMS -K -O >> $PSFILE
    fi
done

gmt psxy $PROJ $LIMS -W1p,105,12_4:0 -K -O >> $PSFILE << EOF
 $tMIN 0
 $tMAX 0
EOF

echo 0.05 0.05 10,2 LB $(date) | gmt pstext -JX1i -R0/1/0/1 -F+f+j -N -K -O >> $PSFILE





# Temperature vs. time
echo "$0: plotting temperature vs. time"

LIMS="-R$tMIN/$tMAX/$TMIN/$TMAX"
LIMS_MODEL="-R$tMAX_MODEL/$tMIN_MODEL/$TMIN/$TMAX"

echo 0 0 | gmt psxy $PROJ $LIMS -Y4.5i -K -O >> $PSFILE

if [ "$TIMING_FILE" != "" ]; then plot_tectonic_timing; fi

TEMP_TIKS=`echo $LIMS | sed -e "s/-R//" |\
      awk -F/ '{
          dtemp = $4-$3
          if (dtemp>500) {
              print 100
          } else if (dtemp>200) {
              print 50
          } else if (dtemp>100) {
              print 20
          } else if (dtemp>50) {
              print 10
          } else if (dtemp>20) {
              print 5
          } else if (dtemp>10) {
              print 2
          } else if (dtemp>5) {
              print 1
          } else if (dtemp>2) {
              print 0.5
          }
      }'`
gmt psbasemap $PROJ $LIMS -Bxa${AGE_TIKS}g${AGE_TIKS}+l"Time Before Present (yr)" -Bya${TEMP_TIKS}g${TEMP_TIKS}+l"Temperature (\260C)" -BWeS -K -O >> $PSFILE
gmt psbasemap $PROJ $LIMS_MODEL -Bxa${AGE_TIKS}+l"Model Time (yr)" -BN -K -O >> $PSFILE

for COL in $(seq 1 $NCOL)
do
    COLOR=$(sed -ne "${COL}p" color_list_${EPOCHTIME}.tmp)
    if [ $COL -eq 1 ]
    then
        awk '{if (NR > 1) print '$tMIN'+(NR-1)*'$dt',$'$COL'}' $TEMPFILE |\
          gmt psxy $PROJ $LIMS -W3p,$COLOR -K -O >> $PSFILE
    else
        awk '{if (NR > 1) print '$tMIN'+(NR-1)*'$dt',$'$COL'}' $TEMPFILE |\
          gmt psxy $PROJ $LIMS -W1p,$COLOR -K -O >> $PSFILE
    fi
done

if [ "$CLOSURE_FILE" != "" ]
then
    awk '{if(/>/){temp=$2}else{print '$tMIN'+$1,temp}}' $CLOSURE_FILE |\
        gmt psxy $PROJ $LIMS -Sc0.05i -W1p -K -O >> $PSFILE
fi





# Surface heat flow vs. time
echo "$0: plotting surface heat flow vs. time"

NPTAVG=100
NPTS=`wc $HFFILE | awk '{print $1-1}'`
awk '{
    if (NR>1) {
        hf[NR-1] = $1
    }
}END{
    sum = 0
    for (i=1;i<NR;i++) {
        if (i<int('$NPTAVG'/2)) {
            print hf[i]
        } else if (i>'$NPTS'-int('$NPTAVG'/2)) {
            print hf[i]
        } else {
            sum = 0
            for (j=-int('$NPTAVG'/2);j<=int('$NPTAVG'/2)-1;j++) {
                sum = sum + hf[i+j]/'$NPTAVG'
            }
            print sum
        }
    }
}' $HFFILE > npt_avg.tmp
HFMIN=`gmt gmtinfo -C npt_avg.tmp | awk '{print $1}'`
HFMAX=`gmt gmtinfo -C npt_avg.tmp | awk '{print $2}'`

LIMS="-R$tMIN/$tMAX/$HFMIN/$HFMAX"

echo 0 0 | gmt psxy $PROJ $LIMS -Y4.5i -K -O >> $PSFILE

if [ "$TIMING_FILE" != "" ]; then plot_tectonic_timing; fi

HF_TIKS=`echo $LIMS | sed -e "s/-R//" | awk -F/ '{print $4-$3}' |\
    awk '{
        hf = $1
        if (hf>=1000) {print 200}
        else if (hf>=500) {print 100}
        else if (hf>=200) {print 50}
        else if (hf>=100) {print 20}
        else if (hf>=50) {print 10}
        else if (hf>=20) {print 5}
        else if (hf>=10) {print 2}
        else {print 1}
    }'`
gmt psbasemap $PROJ $LIMS -Bxa${AGE_TIKS}g${AGE_TIKS}+l"Time (yr)" -Bya${HF_TIKS}g${HF_TIKS}+l"Surface Heat Flow (mW/m@+2@+)" -BWeS -K -O >> $PSFILE
gmt psbasemap $PROJ $LIMS_MODEL -Bxa${AGE_TIKS}+l"Model Time (yr)" -BN -K -O >> $PSFILE

awk '{if (NR > 1) print '$tMIN'+(NR-1)*'$dt',$1}' $HFFILE |\
    gmt psxy $PROJ $LIMS -W1p -K -O >> $PSFILE
awk '{print '$tMIN'+(NR-1)*'$dt',$1}' npt_avg.tmp |\
    gmt psxy $PROJ $LIMS -W1p,green -K -O >> $PSFILE
echo $LIMS | sed -e "s/-R//" |\
    awk -F/ '{print $2,$3}' |\
    gmt psxy $PROJ $LIMS -S-0.5i -W1p,green -D-1.5i/0.3i -K -O >> $PSFILE
echo $LIMS | sed -e "s/-R//" |\
    awk -F/ '{print $2,$3,"'$NPTAVG'-pt avg"}' |\
    gmt pstext $PROJ $LIMS -F+f12,0+jLM -D-1.20i/0.3i -K -O >> $PSFILE





# Depth vs. temperature
echo "$0: plotting depth vs. temperature"
LIMS="-R$TMIN/$TMAX/$ZMIN/$ZMAX0"
PROJ="-JX5i/5i"

echo 0 0 | gmt psxy $PROJ $LIMS -X5.5i -Y-4i -K -O >> $PSFILE

gmt psbasemap $PROJ $LIMS -Bxa${TEMP_TIKS}g${TEMP_TIKS}+l"Temperature (\260C)" -Bya${DEP_TIKS}g${DEP_TIKS}+l"Depth (m)" -BWeSn -K -O >> $PSFILE

if [ "$GEOTHERM_FILE" != "" ]
then
    if [ "$GEOTHERM_PLOT_TIME" == "0" ]
    then
        GEOTHERM_PLOT_TIME=`echo $tMIN_MODEL | awk '{dt=$1/10;for(i=0;i<=$1;i=i+dt){print i}}'`
    fi
    for T in $GEOTHERM_PLOT_TIME
    do
        T2=$(echo $T $tMIN | awk '{print $1+$2}')
        echo "    plotting geotherm at $T yr since start of model, $T2 yr until end of model"
        awk '{
            if (/>/) {
                p = 0
                if ($3==0 && $4=='$T') {
                    p = 1
                    print "> -W1p"
                } else if ($4=='$T') {
                    p = 1
                    print "> -W0.5p,105"
                }
            } else if (p==1) {
                print $1,-$2
            }
        }' $GEOTHERM_FILE > geotherm_${T}_${EPOCHTIME}.tmp
        WC_GEOTHERM=$(wc geotherm_${T}_${EPOCHTIME}.tmp | awk '{print $1}')
        if [ $WC_GEOTHERM -le 0 ]
        then
            echo "    Could not find a geotherm output at the specified time ($T yr)!"
            echo "    Geotherms are available at the following times:"
            grep ">" $GEOTHERM_FILE | awk '{print "    " $4,"yr"}'
        else
            gmt psxy geotherm_${T}_${EPOCHTIME}.tmp $PROJ $LIMS -K -O >> $PSFILE
            awk '{if(NR>1&&($2<='$ZMIN'||$1>='$TMAX')){print $1,$2,"8,2 LM '$T2' yr";exit}}' geotherm_${T}_${EPOCHTIME}.tmp |\
                gmt pstext $PROJ $LIMS -F+f+j -D0.025i/0 -Gwhite -N -K -O >> $PSFILE
        fi
    done
fi

if [ "$HORIZON_TIME" == "" ]
then
    HORIZON_TIME=`echo $tMIN_MODEL | awk '{print $1/10}'`
fi

for i in $(seq 1 $NCOL)
do
    COLOR=$(sed -ne "${i}p" color_list_${EPOCHTIME}.tmp | awk '{print $1}')
    # Plot curves
    paste $TEMPFILE $DEPFILE |\
        awk '{if (NR > 1) print $'$i',$('$i'+'$NCOL')}' |\
        gmt psxy $PROJ $LIMS -W1p,$COLOR -K -O >> $PSFILE
    # Large dot at 0 yr
    paste $TEMPFILE $DEPFILE |\
        awk '{if (NR == 2) print $'$i',$('$i'+'$NCOL')}' |\
        gmt psxy $PROJ $LIMS -Sc0.10i -G$COLOR -W0.5p -K -O >> $PSFILE
    # Dots every 10 yr
    paste $TEMPFILE $DEPFILE |\
        awk '{if (NR>1 && ((NR-1)*'$dt')%'$HORIZON_TIME' == 0) print $'$i',$('$i'+'$NCOL')}' |\
        gmt psxy $PROJ $LIMS -Sc0.05i -G$COLOR -W0.5p -K -O >> $PSFILE
done
# Indicate how often horizons are plotted as dots
echo $LIMS | sed -e "s/-R//" |\
    awk -F/ '{print $2,$4}' |\
    gmt psxy $PROJ $LIMS -Sc0.05i -G$COLOR -W0.5p -D-3.1i/-0.2i -K -O >> $PSFILE
echo $LIMS | sed -e "s/-R//" |\
    awk -F/ '{print $2,$4,"Tracked horizons plotted every '$HORIZON_TIME' yr"}' |\
    gmt pstext $PROJ $LIMS -F+f12,0+jLM -D-3.0i/-0.2i -K -O >> $PSFILE
echo "    plotting horizon temperature/depth every $HORIZON_TIME yr"






# Temperature-depth contours over time
echo 0 0 | gmt psxy $PROJ $LIMS -K -O -Y-5i >> $PSFILE
if [ "$GEOTHERM_FILE" != "" ]
then
    echo "$0: plotting temperature contours over time"
    LIMS="-R$tMIN/$tMAX/$ZMIN/$ZMAX"
    PROJ="-JX4i/3i -P"

    if [ "$TIMING_FILE" != "" ]; then plot_tectonic_timing; fi

    gmt psbasemap $PROJ $LIMS -Bxa${AGE_TIKS}g${AGE_TIKS}+l"Time (yr)" -Bya${DEP_TIKS}g${DEP_TIKS}+l"Depth (m)" -BWeS -K -O >> $PSFILE
    gmt psbasemap $PROJ $LIMS_MODEL -Bxa${AGE_TIKS}+l"Model Time (yr)" -BN -K -O >> $PSFILE

    # Depth versus time
    DEP_DASH="2_1:0"
    for COL in $(seq 1 $NCOL)
    do
        COLOR=$(sed -ne "${COL}p" color_list_${EPOCHTIME}.tmp)
        if [ $COL -eq 1 ]
        then
            awk 'BEGIN{
                    g = 1   # test for being above/below ground
                }{
                if (NR == 1) {print "> -W1.0p,'$COLOR','$DEP_DASH'"}
                if (NR > 1) {
                    if (g==1 && $'$COL'>0) {
                        g = 0
                        print "> -W1.0p,'$COLOR'@90,'$DEP_DASH'"
                    }
                    if (g==0 && $'$COL'<=0) {
                        g = 1
                        print "> -W1.0p,'$COLOR'@35,'$DEP_DASH'"
                    }
                    print '$tMIN'+(NR-1)*'$dt',$'$COL'
                }
            }' $DEPFILE |\
                gmt psxy $PROJ $LIMS -K -O >> $PSFILE
        else
            awk 'BEGIN{g=1}{
                if (NR == 1) {print "> -W1p,'$COLOR','$DEP_DASH'"}
                if (NR > 1) {
                    if (g==1 && $'$COL'>0) {
                        g = 0
                        print "> -W0.5p,'$COLOR'@90,'$DEP_DASH'"
                    }
                    if (g==0 && $'$COL'<=0) {
                        g = 1
                        print "> -W0.5p,'$COLOR'@35,'$DEP_DASH'"
                    }
                    print '$tMIN'+(NR-1)*'$dt',$'$COL'
                }
            }' $DEPFILE |\
                gmt psxy $PROJ $LIMS -K -O >> $PSFILE
        fi
    done


    # Temperature contours
    t1=$(echo $tMIN $tMAX | awk '{print $1+($2-$1)/20}')
    t2=$(echo $tMIN $tMAX | awk '{print $1+($2-$1)/20}')
    t3=$(echo $tMIN $tMAX | awk '{print $2-($2-$1)/20}')
    t4=$(echo $tMIN $tMAX | awk '{print $2-($2-$1)/20}')
    Z1=$ZMIN
    Z2=$ZMAX
    awk '{
        if (/>/) {
            time = '$tMIN' + $3*'$dt'/2
        } else {
            print time,-$2,$1
        }
    }' $GEOTHERM_FILE > temp_contours.tmp
    gmt pscontour temp_contours.tmp $PROJ $LIMS -Wa2p -Wc0.5p -C1 -A5+f7p+u"\260C" \
        -Gl$t1/$Z1/$t2/$Z2,$t3/$Z1/$t4/$Z2 -K -O >> $PSFILE

    echo $tMIN $tMAX | awk '{print $1,0;print $2,0}' | gmt psxy $PROJ $LIMS -W1p,105,12_4:0 -K -O >> $PSFILE
fi





# Closure temperature timing depth vs. time
echo 0 0 | gmt psxy $PROJ $LIMS -K -O -X5i >> $PSFILE
if [ "$CLOSURE_FILE" != "" ]
then
    echo "$0: plotting closure temperature timing"
    awk '{if(!/>/ && !/not closed/){print $2}}' $CLOSURE_FILE > closure_temp_dep_${EPOCHTIME}.tmp
    if [ -s closure_temp_dep_${EPOCHTIME}.tmp ]
    then
        ZMIN2=$(gmt gmtinfo -C closure_temp_dep_${EPOCHTIME}.tmp | awk '{print $1}')
        ZMAX2=$(gmt gmtinfo -C closure_temp_dep_${EPOCHTIME}.tmp | awk '{print $2}')
        ZMIN2=$(echo $ZMIN2 $ZMAX2 | awk '{if($1==$2){print $2-1}else{print $1}}')
    else
        echo "$0: no horizons are below closure temperatures"
        ZMIN2=-1
        ZMAX2=0
    fi
    # tMIN2=$(awk '{if(!/>/){print '$tMIN'+$1}}' $CLOSURE_FILE | gmt gmtinfo -C | awk '{print $1}')
    # tMAX2=$(awk '{if(!/>/){print '$tMIN'+$1}}' $CLOSURE_FILE | gmt gmtinfo -C | awk '{print $2}')
    if [ "$CLOSURE_LIMS" == "" ]
    then
        LIMS="-R$tMIN/$tMAX/$ZMIN2/$ZMAX2"
    else
        LIMS=$CLOSURE_LIMS
    fi
    PROJ="-JX4i/3i -P"

    # if [ "$TIMING_FILE" != "" ]; then plot_tectonic_timing; fi

    gmt psbasemap $PROJ $LIMS -Bxa${AGE_TIKS}g${AGE_TIKS}+l"Age (yr)" -Bya${DEP_TIKS}g${DEP_TIKS}+l"Depth (m)" -BWeSn -K -O >> $PSFILE

    # Plot closure temperature curves
    awk 'BEGIN{p=0}{
        if ($1~/>/) {
            if (!/Partial/) {
                p = 1
                print $0
            } else {
                p = 0
            }
            getline
        }
        if (p==1) {
            if ($1!="#" && $1>'$dt') {
                print '$tMIN'+$1,$2
            }
        }
    }' $CLOSURE_FILE > closure_${EPOCHTIME}.tmp
    gmt psxy closure_${EPOCHTIME}.tmp $PROJ $LIMS -W1p -K -O >> $PSFILE
    gmt psxy closure_${EPOCHTIME}.tmp $PROJ $LIMS -Sc2p -W1p -G155 -K -O >> $PSFILE

    # Look for "Partial" label and plot it
    awk 'BEGIN{p=0}{
        if ($1~/>/) {
            if (/Partial/) {
                p = 1
                print $0
            } else {
                p = 0
            }
            getline
        }
        if (p==1) {
            if ($1!="#" && $1>'$dt') {
                print '$tMIN'+$1,$2
            }
        }
    }' $CLOSURE_FILE > closure_${EPOCHTIME}.tmp
    gmt psxy closure_${EPOCHTIME}.tmp $PROJ $LIMS -G255/235/230 -K -O >> $PSFILE

    # Label curves
    awk 'BEGIN{p=0}{
        if (/>/) {
            temp = $2+0
            p = 1
            getline
        }
        if (!/#/ && $1>'$dt' && p==1) {
            print '$tMIN'+$1,$2,"10,2 CM",temp "\\260"
            p = 0
        }
    }' $CLOSURE_FILE |\
        gmt pstext $PROJ $LIMS -Gwhite -F+f+j -N -K -O >> $PSFILE

    # awk '{if(/>/){print $0}else{print '$tMIN'+$1,$2}}' MWX_test6.3.trange | gmt psxy $PROJ $LIMS -W2p,blue -K -O >> $PSFILE

fi


echo 0 0 | gmt psxy $PROJ $LIMS -O >> $PSFILE

# gmt psconvert $PSFILE -Tg -A
gmt psconvert $PSFILE -Tf -A
# echo "Created file $(basename $PSFILE .ps).png"
echo "Created file $(basename $PSFILE .ps).pdf"

rm $PSFILE
rm gmt.*
rm color_list_${EPOCHTIME}.tmp
test -f closure_${EPOCHTIME}.tmp && rm closure_${EPOCHTIME}.tmp
test -f closure_temp_dep_${EPOCHTIME}.tmp && rm closure_temp_dep_${EPOCHTIME}.tmp
test -f geotherm_0_${EPOCHTIME}.tmp && rm geotherm_*_${EPOCHTIME}.tmp
