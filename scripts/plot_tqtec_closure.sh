#!/bin/bash

#####
#	PARSE COMMAND LINE
#####
function usage () {
    echo "Usage: $0 DEP_FILE CLOSURE_FILE [-timing ACTION_TIME_FILE] [-o BASENAME]" 1>&2
    echo "" 1>&2
    echo "DEP_FILE                    Depth versus time file generated by readtqtec" 1>&2
    echo "CLOSURE_FILE                Closure temperature file generated by readtqtec" 1>&2
    echo "-temprange TEMP_RANGE_FILE  Temperature range file generated by readtqtec -temp:range" 1>&2
    echo "-timing ACTION_TIME_FILE    Timing of tectonic actions generated by tqtec -timing" 1>&2
    echo "-o BASENAME                 Basename for output file (default: dep_vs_time)" 1>&2
    exit 1
}

# Required files
DEPFILE="$1"
CLOSURE_FILE="$2"
if [ ! -f $DEPFILE ]
then
    echo "$0: could not find depth file \"$DEPFILE\"" 1>&2
    exit 1
fi
if [ ! -f $CLOSURE_FILE ]
then
    echo "$0: could not find closure temperature file \"$CLOSURE_FILE\"" 1>&2
    exit 1
fi
shift
shift

# Optional arguments
TEMP_RANGE_FILE=
TIMING_FILE=
BASENAME=closure
while [ "$1" != "" ]
do
    case $1 in
        -temprange) shift; TEMP_RANGE_FILE=$1;;
        -timing) shift; TIMING_FILE=$1;;
        -o) shift; BASENAME=$1;;
    esac
    shift
done


#####
#	SET BOUNDS
#####
# Depth
ZMIN=`awk '{if (NR>1) print $0}' $DEPFILE | gmt gmtinfo -C |\
      awk '{for(i=1;i<=NF;i++){printf("%f\n"),$i}}' | gmt gmtinfo -C |\
      awk '{print $1-$1%10-10}'`
ZMAX=`awk '{if (NR>1) print $0}' $DEPFILE | gmt gmtinfo -C |\
      awk '{for(i=1;i<=NF;i++){printf("%f\n"),$i}}' | gmt gmtinfo -C |\
      awk '{print $2-$2%10+10}'`
ZMIN2=$(awk '{if(!/>/){print $2}}' $CLOSURE_FILE | gmt gmtinfo -C | awk '{print $1}')
ZMAX2=$(awk '{if(!/>/){print $2}}' $CLOSURE_FILE | gmt gmtinfo -C | awk '{print $2}')
echo $ZMIN2 $ZMAX2

# Time
tMIN=`head -1 $DEPFILE | awk '{print $1}'`
tMAX="0"
dt=`head -1 $DEPFILE | awk '{print $2}'`

# Tectonic action timing
function plot_tectonic_timing () {
    YMIN=$(echo $LIMS | sed -e "s/-R//" | awk -F/ '{print $3}')
    YMAX=$(echo $LIMS | sed -e "s/-R//" | awk -F/ '{print $4}')
    awk 'BEGIN{print ">"}{
        if ($1=="burial" || $1=="uplift") {
            print ">"
            print '$tMIN'+$3,'$YMIN'
            print '$tMIN'+$4,'$YMIN'
            print '$tMIN'+$4,'$YMAX'
            print '$tMIN'+$3,'$YMAX'
            print '$tMIN'+$3,'$YMIN'
        }
    }' $TIMING_FILE |\
        gmt psxy $PROJ $LIMS -G245 -K -O >> $PSFILE
    awk 'BEGIN{print ">"}{
        if ($1=="thrust") {
            print ">"
            print '$tMIN'+$3,'$YMIN'
            print '$tMIN'+$3,'$YMAX'
        }
    }' $TIMING_FILE |\
        gmt psxy $PROJ $LIMS -W3p,225 -K -O >> $PSFILE
}


#####
#	PLOT CLOSURE TEMPERATURES
#####

# GMT variables
gmt set PS_MEDIA 17ix17i
gmt set MAP_GRID_PEN 0.5p,225,4_4:0

if [ "$CLOSURE_LIMS" == "" ]
then
    LIMS="-R$tMIN/$tMAX/$ZMIN2/$ZMAX2"
else
    LIMS=$CLOSURE_LIMS
fi
echo $LIMS

AGE_TIKS=`echo $LIMS | sed -e "s/-R//" | awk -F"/" '{print $1,$2}' |\
            awk '{
                time = $2-$1
                if (time>=50) {dt=10}
                else if (time>=20) {dt=5}
                else if (time>=10) {dt=2}
                else {dt=1}
                print dt
            }'`
DEP_TIKS=`echo $LIMS | sed -e "s/-R//" | awk -F"/" '{print $3,$4}' |\
            awk '{
                relief = $2-$1
                if (relief>=50) {dz=10}
                else if (relief>=20) {dz=5}
                else if (relief>=10) {dz=2}
                else if (relief>=5) {dz=1}
                else {dz=0.5}
                print dz
            }'`

PROJ="-JX8i/6i"

PSFILE="${BASENAME}.ps"

# Initialize plot
gmt psxy -T -K > $PSFILE

# # Tectonic timing
# if [ "$TIMING_FILE" != "" ]; then plot_tectonic_timing; fi

# Basemap
gmt psbasemap $PROJ $LIMS -Bxa${AGE_TIKS}g${AGE_TIKS}+l"Age (Ma)" -Bya${DEP_TIKS}g${DEP_TIKS}+l"Depth (km)" -BWeSn -K -O >> $PSFILE

# Last time through closure temperatures specified in readtqtec
awk 'BEGIN{p=0}{
    if ($1~/>/) {
        if (!/Partial/) {
            p = 1
            print $0
        } else {
            p = 0
        }
        getline
    }
    if (p==1) {
        if ($1!="#" && $1>'$dt') {
            print '$tMIN'+$1,$2
        }
    }
}' $CLOSURE_FILE > closure.tmp
gmt psxy closure.tmp $PROJ $LIMS -W1p -K -O >> $PSFILE
gmt psxy closure.tmp $PROJ $LIMS -Sc2p -W1p -G155 -K -O >> $PSFILE

# Partial closure temperatures specified in readtqtec
awk 'BEGIN{p=0}{
    if ($1~/>/) {
        if (/Partial/) {
            p = 1
            print $0
        } else {
            p = 0
        }
        getline
    }
    if (p==1) {
        if ($1!="#" && $1>'$dt') {
            print '$tMIN'+$1,$2
        }
    }
}' $CLOSURE_FILE > closure.tmp
gmt psxy closure.tmp $PROJ $LIMS -G255/235/230 -K -O >> $PSFILE

# Curve labels
awk 'BEGIN{p=0}{
    if (/>/) {
        temp = $2+0
        p = 1
        getline
    }
    if (!/#/ && $1>'$dt' && p==1) {
        print '$tMIN'+$1,$2,"10,2 CM",temp "\\260"
        p = 0
    }
}' $CLOSURE_FILE |\
    gmt pstext $PROJ $LIMS -Gwhite -F+f+j -N -K -O >> $PSFILE

# Temperature ranges specified in readtqtec
if [ "$TEMP_RANGE_FILE" != "" ]
then
    awk '{if(/>/){print $0}else{print '$tMIN'+$1,$2}}' $TEMP_RANGE_FILE |\
        gmt psxy $PROJ $LIMS -W2p,blue -K -O >> $PSFILE
fi

# Date and time
echo 12,0 LB $(date) | gmt pstext $PROJ $LIMS -F+f+j+cBL -D0.05i -K -O >> $PSFILE

# Finalize
gmt psxy -T -O >> $PSFILE

gmt psconvert $PSFILE -Tf -A
echo "Created file $(basename $PSFILE .ps).pdf"

rm $PSFILE
rm gmt.*
